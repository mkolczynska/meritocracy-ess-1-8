# get ISCO-08 to ISEI-08 syntax
# based on: http://www.harryganzeboom.nl/isco08/isco08_with_isei.pdf
isco_isei <- read.csv("isco08-to-isei08.csv")
View(isco_isei)
# How far to meritocracy? A cross-national longitudinal analysis of European countries
# Replication materials
sessionInfo()
# R version 3.5.2 (2018-12-20)
# Platform: x86_64-w64-mingw32/x64 (64-bit)
# Running under: Windows 10 x64 (build 17134)
#
# Matrix products: default
#
# locale:
#   [1] LC_COLLATE=English_United States.1252  LC_CTYPE=English_United States.1252
# [3] LC_MONETARY=English_United States.1252 LC_NUMERIC=C
# [5] LC_TIME=English_United States.1252
#
# attached base packages:
#   [1] stats     graphics  grDevices utils     datasets  methods   base
#
# loaded via a namespace (and not attached):
#   [1] compiler_3.5.2 tools_3.5.2
library(essurvey) # for getting European Social Survey data
library(ggplot2) # for plotting data
library(tidyverse) # for manipulating data
library(SocialPosition) # for converting ISCO-88 to ISEI-88
#devtools::install_github("pdparker/isco88conversion")
library(lme4) # for multi-level models
library(sjPlot) # for getting predicted values from models
library(countrycode) # covert between country codes and names
library(questionr) # wtd.table
library(emdist) # emd2d
library(rio) # importing
set_email("mkolczynska@gmail.com")
ess_all <- import_rounds(1:8)
# create empty list for filling in with cleaned ESS data
ess <- list()
# select variables from each round (from each element of list)
for (i in 1:8) {
ess[[i]] <- ess_all[[i]] %>% select("idno", "cntry", "essround", "pspwght", "agea",
"eisced", "mnactic", matches("isco.."),
matches("edulvl."), starts_with("inwy"))
}
ess <- plyr::ldply(ess, rbind) %>%
recode_missings() %>%
mutate(weight = ifelse(!is.na(pspwght), pspwght, 1),
year = ifelse(!is.na(inwyr), inwyr, inwyys),
cntry_round = paste(cntry, essround, sep = "")) %>%
group_by(cntry, essround) %>%
mutate(year = round(mean(year, na.rm = TRUE)),
year = ifelse(cntry == "EE" & essround == 5, 2011, year)) %>%
ungroup()
### Education and Occupation Categories -------------------
# the ESS variable iscoco has the ISCO-88 codes
# the ESS variable isco08 has the ISCO-08 codes
# 1. Recodes ISCED codes into ISEI (separately ISCO-88 to ISEI-88, ISCO-08 to ISEI-08)
# 2. Recodes ISEI into quartiles within year country-year
# 3. The fifth occupation category includes the unemployed who are looking for work
# (based on mnactic)
# 4. The unemplloyed are always the lowest category, followed by the ISEI quartiles
# 5. The unemployed category varies substantially in size across samples
# 6. Education is in 4 categories: less than secondary, secondary non-tertiary,
#    BA or equivalent, MA or equivalent or higher
# 7. Cases without an occupation or education category are dropped
# get ISCO-08 to ISEI-08 syntax
# based on: http://www.harryganzeboom.nl/isco08/isco08_with_isei.pdf
isco_isei <- read.csv("isco08-to-isei08.csv")
isco_codes <- isco_isei[,1]
isei_codes <- isco_isei[,2]
# use package to recode ISCO-88 to ISEI-88
ess <- recode_from_ISCO88_to_ISEI(ISCO88 = ess$iscoco, data = ess)
ess <- ess %>%
# filter cases with non-missing values on key variables
filter(!is.na(iscoco) | !is.na(isco08) | mnactic == 3) %>%
# filter by age
filter(agea >= 35 & agea <= 65) %>%
# recode ISCO to ISEI
mutate(isei08 = plyr::mapvalues(isco08, isco_codes, isei_codes),
isei88 = ISEI,
isei = coalesce(as.numeric(isei88), as.numeric(isei08))) %>%
group_by(cntry_round) %>%
# calculate quartiles of ISEI by country and round
mutate(isei_4tile = as.numeric(cut(isei,
breaks = quantile(isei,
probs = seq(0, 1, 0.25),
na.rm = TRUE,
type = 9),
include.lowest = TRUE)),
isei_4tile = factor(isei_4tile,
levels = c(1:4),
labels = c("Lowest", "Second", "Third", "Highest"))) %>%
ungroup() %>%
mutate(
# creates 5 categories for occupation (0 = unemployed)
isei_5cat = ifelse(mnactic == 3, 0, isei_4tile),
isei_5cat = factor(isei_5cat,
levels = c(0:4),
labels = c("Unempl", "Lowest", "Second", "Third", "Highest")),
# creates 4 education categories
educ4gr_a = plyr::mapvalues(edulvla,
c(0, 1,2,3,4,5,55),
c(NA,1,1,2,3,4,NA)),
educ_4gr = plyr::mapvalues(eisced,
c(0, 1,2,3,4,5,6,7,55),
c(NA,1,1,1,2,2,3,4,NA)),
educ_4gr = ifelse(is.na(educ_4gr), educ4gr_a, educ_4gr),
educ_4gr = factor(educ_4gr,
levels = c(1:4),
labels = c("-HS", "HS", "BA", "MA")),
country = countrycode(cntry, "iso2c", "country.name"),
country = ifelse(cntry == "XK", "Kosovo", country)) %>%
drop_na(isei_5cat, educ_4gr)
### meritocracy: occupation - education -------------
# split data by country-round into seprate data frames collected in one list
ess.list <- split(as.data.frame(ess[,c("cntry_round", "isei_5cat", "educ_4gr", "weight")]),
ess$cntry_round)
# create a list to store meritocratic allocations per country-round
ess.occ.edu.list <- list()
# create empty data frame to fill in with country-round measures of distance from meritocracy and
# distance from random allocation
cntry.diss <- data.frame(matrix(nrow = length(unique(ess$cntry_round)), ncol = 7,
dimnames = list(c(), c("cntry_round", "diss_merit_obs", "emd_merit_obs",
"diss_random_obs", "emd_random_obs",
"diss_random_merit", "emd_random_merit"))))
# loop over country-rounds to:
# 1. create the empirical distribution of education by occupation
# 2. create the meritocratic allocation table
# 3. create the random allocation table under independence
# 4. calculate the Earth Mover's Distance (EMD) between:
#    a. observed and meritocratic allocations
#    b. observed and random allocations
#    c. meritocratic and random allocations
for (i in 1:length(ess.list)) {
# 1. create the empirical distribution of education by occupation
data <- prop.table(wtd.table(ess.list[[i]]$educ_4gr,
ess.list[[i]]$isei_5cat,
weights = ess.list[[i]]$weight))
# 3. create the random allocation table under independence
random <- matrix(rep(0, nrow(data)*ncol(data)), nrow = nrow(data), ncol = ncol(data))
# 2. create the meritocratic allocation table
merit <- matrix(rep(0, nrow(data)*ncol(data)), nrow = nrow(data), ncol = ncol(data))
for (x in 1:nrow(data)) {
for (y in 1:ncol(data)) {
merit[x,y] <- min(margin.table(data, 1)[x] - sum(merit[x,1:(y-1)]),
margin.table(data, 2)[y] - sum(merit[1:(x-1),y]))
merit <- round(merit, 5)
}
}
for (x in 1:nrow(data)) {
for (y in 1:ncol(data)) {
random[x,y] <- margin.table(data, 1)[x] * margin.table(data, 2)[y]
random <- round(random, 5)
}
}
rownames(merit) <- names(margin.table(data, 1))
colnames(merit) <- names(margin.table(data, 2))
rownames(random) <- names(margin.table(data, 1))
colnames(random) <- names(margin.table(data, 2))
ess.occ.edu.list[[i]] <- merit
# 4. calculate the Earth Mover's Distance (EMD) between:
#    a. observed and meritocratic allocations
#    b. observed and random allocations
#    c. meritocratic and random allocations
cntry.diss$cntry_round[i] <- names(ess.list)[i]
cntry.diss$diss_merit_obs[i] <- round(sum(abs(data - merit)) * 0.5, 5)
cntry.diss$emd_merit_obs[i] <- emdist::emd2d(merit, data, xdist = 1, ydist = 1, dist="manhattan")*0.5
cntry.diss$diss_random_obs[i] <- round(sum(abs(data - random)) * 0.5, 5)
cntry.diss$emd_random_obs[i] <- emdist::emd2d(random, data, xdist = 1, ydist = 1, dist="manhattan")*0.5
cntry.diss$diss_random_merit[i] <- round(sum(abs(merit - random)) * 0.5, 5)
cntry.diss$emd_random_merit[i] <- emdist::emd2d(random, merit, xdist = 1, ydist = 1, dist="manhattan")*0.5
}
names(ess.occ.edu.list) <- names(ess.list)
# create data table for analysis with country-round-level measures
# construct relative distance from meritocracy = EMD(observed, meritocratic) / EMD(meritocratic, random)
cntry.diss <- cntry.diss %>%
mutate(cntry = substr(cntry_round, 1, 2),
round = as.numeric(substr(cntry_round, 3, 3)),
country = countrycode(cntry, "iso2c", "country.name"),
country = ifelse(cntry == "XK", "Kosovo", country),
year = 2002 + (round - 1)*2,
emd_rel = emd_merit_obs / emd_random_merit,
diss_rel = diss_merit_obs / diss_random_merit) %>%
select(cntry_round, cntry, country, round, year, everything())
### correlation matrix between the different measures
cor(cntry.diss[,c("emd_rel", "diss_rel")], use = "pairwise.complete.obs") %>% round(3)
#### heat map ------
cntry.diss %>%
group_by(cntry) %>%
mutate(mean_emd_rel = mean(emd_rel)) %>%
ggplot(., aes(x = reorder(country, desc(mean_emd_rel)),
y = factor(year),
fill = emd_rel)) +
geom_raster() +
# scale_fill_viridis_c(name = "Distance from \nmeritocracy", direction = -1) +
scale_fill_gradient2(low = "#09A611", mid = "gray90",
high = "#9B0B07", midpoint = 0.5, space = "Lab",
na.value = "grey50", guide = "colourbar", aesthetics = "fill") +
xlab(label= "") +
ylab(label= "ESS Round") +
labs(fill="Relative distance \nfrom meritocracy") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
#ggtitle(label = "Distance from meritocracy by country and year") +
coord_flip()
cntry.diss %>%
group_by(cntry) %>%
mutate(mean_emd_rel = mean(emd_rel)) %>%
ggplot(., aes(x = reorder(country, desc(mean_emd_rel)),
y = factor(year),
fill = emd_rel)) +
geom_raster() +
scale_fill_gradient2(low = "#09A611", mid = "gray90",
high = "#9B0B07", midpoint = 0.5, space = "Lab",
na.value = "grey50", guide = "colourbar", aesthetics = "fill") +
xlab(label= "") +
ylab(label= "ESS Round") +
labs(fill="Relative distance \nfrom meritocracy") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
coord_flip()
cee <- c("AL", "BG", "CY", "CZ", "EE", "HR", "HU", "XK", "LT",
"LV", "PL", "RO", "RU", "SI", "SK", "TR", "UA")
# create dummy for Western European countries (and Israel) vs. Post-communist countries (and Turkey)
cntry.diss <- cntry.diss %>%
mutate(we = ifelse(cntry %in% cee, 1, 0))
# mean distance to meritocracy between country groups
cntry.diss %>%
group_by(we) %>%
summarise(mean(emd_rel))
# variance of the distance to meritocracy by ESS round
cntry.diss %>% group_by(round) %>% summarise(mean = mean(emd_rel), var = var(emd_rel))
# dataset for analysis, with min. 2 measurements per country
cntry.diss.2 <- cntry.diss %>%
group_by(cntry) %>%
mutate(count = n()) %>%
filter(count > 1)
# two-level model with countries nested in country-years and a random slope for time
m <- lmer(emd_rel ~ round + we + (1 + round | country), data = cntry.diss.2)
summary(m)
m_round <- get_model_data(m, type="pred",
terms=c("round", "country"),pred.type="re")
# plot country slopes
ggplot(m_round, aes(x = x, y = predicted, group = group)) +
geom_line() +
gghighlight::gghighlight(max(predicted) > 0.64 ) +
ylab("Predicted distance from meritocracy") +
xlab("ESS Round") +
scale_x_continuous(breaks=c(1:8)) +
theme_bw()
ggsave("meritocracy-slopes.png", width = 6, height = 4, units = "in", scale = 1)
cntry.diss %>%
group_by(cntry) %>%
mutate(mean_emd_rel = mean(emd_rel)) %>%
ggplot(., aes(x = reorder(country, desc(mean_emd_rel)),
y = factor(year),
fill = emd_rel)) +
geom_raster() +
scale_fill_gradient2(low = "#09A611", mid = "gray90",
high = "#9B0B07", midpoint = 0.5, space = "Lab",
na.value = "grey50", guide = "colourbar", aesthetics = "fill") +
xlab(label= "") +
ylab(label= "ESS Round") +
labs(fill="Relative distance \nfrom meritocracy") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
coord_flip()
ggsave("meritocracy-heatmap.png", width = 8, height = 7, units = "in", scale = 0.9)
ggsave("meritocracy-heatmap.eps", width = 8, height = 7, units = "in",
device = "eps", scale = 1, dpi = 600)
cntry.diss.sup <- list()
for (ncat in (4:7)) {
## data prep
ess_sup <- ess %>%
group_by(cntry_round) %>%
# calculate n-tiles of ISEI by country and round
mutate(isei_tile = as.numeric(cut(isei,
breaks = quantile(isei,
probs = seq(0, 1, 1 / ncat),
na.rm = TRUE,
type = 9),
include.lowest = TRUE)),
isei_tile = factor(isei_tile,
levels = c(1:ncat))) %>%
ungroup() %>%
mutate(
isei_cat = ifelse(mnactic == 3, 0, isei_tile),
isei_cat = factor(isei_cat,
levels = c(0:ncat))) %>%
drop_na(isei_cat, educ_4gr)
### meritocracy
ess.list.sup <- split(as.data.frame(ess_sup[,c("cntry_round", "isei_cat",
"educ_4gr", "weight")]),
ess_sup$cntry_round)
ess.occ.edu.list.sup <- list()
cntry.diss.sup[[ncat]] <- data.frame(matrix(nrow = length(unique(ess_sup$cntry_round)), ncol = 7,
dimnames = list(c(), c("cntry_round", "diss_merit_obs_s",
"emd_merit_obs_s", "diss_random_obs_s",
"emd_random_obs_s", "diss_random_merit_s",
"emd_random_merit_s"))))
for (i in 1:length(ess.list.sup)) {
data <- prop.table(wtd.table(ess.list.sup[[i]]$educ_4gr,
ess.list.sup[[i]]$isei_cat,
weights = ess.list.sup[[i]]$weight))
random <- matrix(rep(0, nrow(data)*ncol(data)), nrow = nrow(data), ncol = ncol(data))
merit <- matrix(rep(0, nrow(data)*ncol(data)), nrow = nrow(data), ncol = ncol(data))
for (x in 1:nrow(data)) {
for (y in 1:ncol(data)) {
merit[x,y] <- min(margin.table(data, 1)[x] - sum(merit[x,1:(y-1)]),
margin.table(data, 2)[y] - sum(merit[1:(x-1),y]))
merit <- round(merit, 5)
}
}
for (x in 1:nrow(data)) {
for (y in 1:ncol(data)) {
random[x,y] <- margin.table(data, 1)[x] * margin.table(data, 2)[y]
random <- round(random, 5)
}
}
rownames(merit) <- names(margin.table(data, 1))
colnames(merit) <- names(margin.table(data, 2))
rownames(random) <- names(margin.table(data, 1))
colnames(random) <- names(margin.table(data, 2))
ess.occ.edu.list.sup[[i]] <- merit
cntry.diss.sup[[ncat]]$cntry_round[i] <- names(ess.list)[i]
cntry.diss.sup[[ncat]]$diss_merit_obs_s[i] <- round(sum(abs(data - merit)) * 0.5, 5)
cntry.diss.sup[[ncat]]$emd_merit_obs_s[i] <- emdist::emd2d(merit, data, xdist = 1, ydist = 1, dist="manhattan")*0.5
cntry.diss.sup[[ncat]]$diss_random_obs_s[i] <- round(sum(abs(data - random)) * 0.5, 5)
cntry.diss.sup[[ncat]]$emd_random_obs_s[i] <- emdist::emd2d(random, data, xdist = 1, ydist = 1, dist="manhattan")*0.5
cntry.diss.sup[[ncat]]$diss_random_merit_s[i] <- round(sum(abs(merit - random)) * 0.5, 5)
cntry.diss.sup[[ncat]]$emd_random_merit_s[i] <- emdist::emd2d(random, merit, xdist = 1, ydist = 1, dist="manhattan")*0.5
cntry.diss.sup[[ncat]]$emd_rel_s[i] <- cntry.diss.sup[[ncat]]$emd_merit_obs_s[i] / cntry.diss.sup[[ncat]]$emd_random_merit_s[i]
cntry.diss.sup[[ncat]]$diss_rel_s[i] <- cntry.diss.sup[[ncat]]$diss_merit_obs_s[i] / cntry.diss.sup[[ncat]]$diss_random_merit_s[i]
}
names(ess.occ.edu.list.sup) <- names(ess.list.sup)
}
cntry.diss.sup <- full_join(cntry.diss.sup[[4]], cntry.diss.sup[[5]],
by = "cntry_round", suffix = c(".4", ".5")) %>%
full_join(cntry.diss.sup[[6]], by = "cntry_round", suffix = c("", ".6")) %>%
full_join(cntry.diss.sup[[7]], by = "cntry_round", suffix = c("", ".7"))
### correlations between relative Earth Mover's Distance
### with ISEI in 4, 5, 6, and 7 categories + unemployed
cor(cntry.diss.sup[, c(8, 16, 24, 32)])
### correlations between relative the index of dissimilarity
### with ISEI in 4, 5, 6, and 7 categories + unemployed
cor(cntry.diss.sup[, c(9, 17, 25, 33)])
